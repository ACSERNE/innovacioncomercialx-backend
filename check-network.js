const dns = require('dns');
const https = require('https');
const { execSync } = require('child_process');

console.log('üîç Verificando conectividad cockpitizada...\n');

let dnsOK = false;
let httpsOK = false;
let proxyDetected = false;

// 1. Verificar resoluci√≥n DNS
dns.lookup('registry.npmjs.org', (err, address) => {
  if (err) {
    console.log('‚ùå Error de DNS: No se pudo resolver registry.npmjs.org');
    console.log('üí° Sugerencia: Verifica tu conexi√≥n a internet o cambia de DNS (por ejemplo, 8.8.8.8)');
  } else {
    console.log(`‚úÖ DNS resuelto: ${address}`);
    dnsOK = true;
  }

  // 2. Verificar acceso HTTPS
  const req = https.get('https://registry.npmjs.org/', res => {
    console.log(`‚úÖ Conexi√≥n HTTPS: ${res.statusCode} ${res.statusMessage}`);
    httpsOK = res.statusCode === 200;
    continuar();
  });

  req.on('error', e => {
    console.log(`‚ùå Error de conexi√≥n HTTPS: ${e.code} ‚Äî ${e.message}`);
    if (e.code === 'ECONNRESET') {
      console.log('üí° Sugerencia: Est√°s detr√°s de un proxy o VPN. Revisa tu configuraci√≥n de red.');
    } else if (e.code === 'ENOTFOUND') {
      console.log('üí° Sugerencia: Verifica tu DNS o conexi√≥n a internet.');
    }
    continuar();
  });

  req.end();

  // 3. Verificar configuraci√≥n de proxy
  try {
    const proxy = execSync('npm config get proxy').toString().trim();
    const httpsProxy = execSync('npm config get https-proxy').toString().trim();

    if (proxy !== 'null' || httpsProxy !== 'null') {
      console.log(`‚ö†Ô∏è  Proxy detectado:\n  proxy: ${proxy}\n  https-proxy: ${httpsProxy}`);
      console.log('üí° Sugerencia: Si no usas proxy, puedes eliminarlo con:\n  npm config delete proxy\n  npm config delete https-proxy');
      proxyDetected = true;
    } else {
      console.log('‚úÖ Sin proxy configurado en npm');
    }
  } catch (err) {
    console.log('‚ùå Error al leer configuraci√≥n de npm:', err.message);
    console.log('üí° Sugerencia: Aseg√∫rate de tener npm correctamente instalado.');
  }

  // 4. Si todo est√° bien, limpiar cach√© y reintentar instalaci√≥n
  function continuar() {
    if (dnsOK && httpsOK && !proxyDetected) {
      console.log('\nüßº Red limpia detectada. Intentando instalar pkg...');
      try {
        execSync('npm cache clean --force', { stdio: 'inherit' });
        execSync('npm install -g pkg', { stdio: 'inherit' });
        console.log('\n‚úÖ pkg instalado correctamente. Puedes ejecutar build.js');
      } catch (err) {
        console.log(`‚ùå Fall√≥ la instalaci√≥n de pkg: ${err.message}`);
        console.log('üí° Sugerencia: Intenta instalar manualmente o revisa tu red nuevamente.');
      }
    } else {
      console.log('\n‚èπÔ∏è Instalaci√≥n autom√°tica de pkg omitida por problemas de red.');
    }
  }
});
